package warehouse.frontend;



import warehouse.backend.UserDAO;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.JOptionPane;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author HP
 */
public class CreatePassword extends javax.swing.JFrame {

    /**
     * Creates new form CreatePassword
     */
    private String useremail;
    
    public CreatePassword(String email, String username, String userphone, String userrole) {
        this.useremail= email;
        initComponents();
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                // Check if the window is maximized
                if ((getExtendedState() & MAXIMIZED_BOTH) == MAXIMIZED_BOTH) {
                    // Set background color of JFrame when maximized
                    getContentPane().setBackground(new Color(0, 51, 51));
                    // Center jPanel1
                    Createpassword.setLocation((getWidth() - Createpassword.getWidth()) / 2,
                            (getHeight() - Createpassword.getHeight()) / 2);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Createpassword = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Newpassword = new javax.swing.JLabel();
        Userconfirmpassword = new javax.swing.JLabel();
        Submitbutton = new javax.swing.JButton();
        password1Txt = new javax.swing.JPasswordField();
        password2Txt = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Userpassword");
        setBackground(new java.awt.Color(0, 102, 102));
        setPreferredSize(new java.awt.Dimension(400, 400));

        Createpassword.setBackground(new java.awt.Color(0, 102, 102));
        Createpassword.setForeground(new java.awt.Color(255, 255, 255));
        Createpassword.setMaximumSize(new java.awt.Dimension(400, 400));
        Createpassword.setPreferredSize(new java.awt.Dimension(400, 400));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 34)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(242, 242, 242));
        jLabel1.setText("CREATE PASSWORD\n");

        Newpassword.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        Newpassword.setForeground(new java.awt.Color(242, 242, 242));
        Newpassword.setText("Enter New Password\n");

        Userconfirmpassword.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        Userconfirmpassword.setForeground(new java.awt.Color(242, 242, 242));
        Userconfirmpassword.setText("Confirm New Password\n");

        Submitbutton.setBackground(new java.awt.Color(204, 0, 51));
        Submitbutton.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        Submitbutton.setForeground(new java.awt.Color(255, 255, 0));
        Submitbutton.setText("SUBMIT\n");
        Submitbutton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Submitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitbuttonActionPerformed(evt);
            }
        });

        password1Txt.setBackground(new java.awt.Color(0, 102, 102));
        password1Txt.setForeground(new java.awt.Color(242, 242, 242));
        password1Txt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 242, 242), 2, true));

        password2Txt.setBackground(new java.awt.Color(0, 102, 102));
        password2Txt.setForeground(new java.awt.Color(242, 242, 242));
        password2Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 242, 242), 2));

        javax.swing.GroupLayout CreatepasswordLayout = new javax.swing.GroupLayout(Createpassword);
        Createpassword.setLayout(CreatepasswordLayout);
        CreatepasswordLayout.setHorizontalGroup(
            CreatepasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatepasswordLayout.createSequentialGroup()
                .addGroup(CreatepasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatepasswordLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(CreatepasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Newpassword)
                            .addComponent(jLabel1)
                            .addComponent(Userconfirmpassword)
                            .addGroup(CreatepasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(password2Txt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                                .addComponent(password1Txt, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(CreatepasswordLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(Submitbutton)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        CreatepasswordLayout.setVerticalGroup(
            CreatepasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatepasswordLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(Newpassword)
                .addGap(18, 18, 18)
                .addComponent(password1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(Userconfirmpassword)
                .addGap(18, 18, 18)
                .addComponent(password2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Submitbutton)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Createpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Createpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitbuttonActionPerformed
        // TODO add your handling code here: 
        var password= new String(password1Txt.getPassword());//Get the new password
        var password1= new String(password2Txt.getPassword());//Get the confirmation password

        //Check if both passwords match
        if(!password.equals(password1)){
            JOptionPane.showMessageDialog(this,"Passwords do not match!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }else{
            //Update the password in the database
            boolean isUpdated = UserDAO.updatePassword(useremail, password1);

            if (isUpdated) {
                JOptionPane.showMessageDialog(this, "Password updated Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                HomeForm frame = new HomeForm();
                frame.setVisible(true);
                frame.setLocationRelativeTo(null);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update password!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
          
    }//GEN-LAST:event_SubmitbuttonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Createpassword;
    private javax.swing.JLabel Newpassword;
    private javax.swing.JButton Submitbutton;
    private javax.swing.JLabel Userconfirmpassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField password1Txt;
    private javax.swing.JPasswordField password2Txt;
    // End of variables declaration//GEN-END:variables
}
